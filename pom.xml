<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.realityforge.gwt.appcache.example</groupId>
    <artifactId>gwt-appcache-example</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Convenience property to set the GWT version -->
        <gwtVersion>2.7.0</gwtVersion>
        <gwt.maven.plugin.version>2.7.0</gwt.maven.plugin.version>
        <gwt.style>DETAILED</gwt.style>
        <javaVersion>1.7</javaVersion>
        <!-- GWT needs at least java 1.5 -->
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwtVersion}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwtVersion}</version>
            <scope>provided</scope>
        </dependency>
        <!-- needed for gwt integration tests-->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwtVersion}</version>
            <scope>test</scope>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.apache.geronimo.specs</groupId>-->
            <!--<artifactId>geronimo-servlet_3.0_spec</artifactId>-->
            <!--<version>1.0</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>com.google.code.findbugs</groupId>-->
            <!--<artifactId>findbugs</artifactId>-->
            <!--<version>2.0.1</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
            <type>jar</type>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>javax.validation</groupId>-->
            <!--<artifactId>validation-api</artifactId>-->
            <!--<version>1.0.0</version>-->
            <!--<type>sources</type>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.realityforge.gwt.cache-filter</groupId>
            <artifactId>gwt-cache-filter</artifactId>
            <version>0.3</version>
        </dependency>
        <dependency>
            <groupId>org.realityforge.gwt.appcache</groupId>
            <artifactId>gwt-appcache-client</artifactId>
            <version>1.0.7</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.realityforge.gwt.appcache</groupId>
            <artifactId>gwt-appcache-linker</artifactId>
            <version>1.0.7</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.realityforge.gwt.appcache</groupId>
            <artifactId>gwt-appcache-server</artifactId>
            <version>1.0.7</version>
        </dependency>
    </dependencies>
<!--


    # This dependency demonstrates that appcache can work even when caching disabled
    # for the resources within the manifest. Firefox disallows no-store in Cache-control
    # header.

    gwt_appcache_client: org.realityforge.gwt.appcache:gwt-appcache-client:jar:1.0.5
    gwt_appcache_linker: org.realityforge.gwt.appcache:gwt-appcache-linker:jar:1.0.5
    gwt_appcache_server: org.realityforge.gwt.appcache:gwt-appcache-server:jar:1.0.5
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${javaVersion}</source>
                    <target>${javaVersion}</target>
                </configuration>
            </plugin>
            <!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${gwt.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                            <goal>generateAsync</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options, see
                  gwt-maven-plugin documentation at codehaus.org -->
                <configuration>
                    <runTarget>index.html</runTarget>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>
                    <mode>htmlunit</mode>
                    <includes>**/Gwt*Suite.java</includes>
                    <compileReport>true</compileReport>
                    <style>${gwt.style}</style>
                </configuration>
            </plugin>

            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                    <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
                    <warSourceExcludes>web.xml</warSourceExcludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>